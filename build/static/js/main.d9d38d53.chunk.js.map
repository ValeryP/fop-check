{"version":3,"sources":["components/InputText.tsx","components/loading/Loading.tsx","network/Api.ts","components/Table.tsx","components/App.tsx","index.tsx","utils/ThemeProvider.tsx"],"names":["useStyles","makeStyles","theme","createStyles","textField","margin","spacing","breakpoints","up","minWidth","InputText","updateResultsCallback","classes","useState","text","setText","timer","setTimer","useEffect","clearTimeout","setTimeout","TextField","className","variant","onChange","event","persist","Promise","resolve","_","target","value","then","v","label","placeholder","Loading","Grid","container","justify","alignContent","style","textAlign","item","xs","Container","maxWidth","Typography","fontWeight","letterSpacing","loadData","onDataLoaded","configPapaparse","skipEmptyLines","header","download","worker","delimiter","Papa","parse","complete","results_types","types","data","flatMap","it","Object","keys","map","key","results_department","departments","results","index","type","String","Number","department","toUpperCase","slice","parseItem","paper","height","FopTable","domains","items","React","page","setPage","rowsPerPage","setRowsPerPage","columnNames","columnNamesMap","name","size","align","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","background","grey","column","indexColumn","TableCell","width","buildTableCell","TableBody","row","indexRow","verticalAlign","includes","searchWords","autoEscape","highlightStyle","textToHighlight","toString","buildRowItem","TableFooter","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","TablePaginationActions","App","filterParam","setFilterParam","isLoading","setLoading","setItems","searchDomains","trim","toLowerCase","split","filter","filteredItems","domain","indexOf","some","stringSimilarity","compareTwoStrings","sort","t1","t2","color","ReactDOM","render","ThemeProvider","createMuiTheme","palette","primary","main","secondary","document","getElementById","body"],"mappings":"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","file":"static/js/main.d9d38d53.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react'\nimport {createStyles, makeStyles, TextField, Theme} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        textField: {\n            margin: theme.spacing(4),\n            [theme.breakpoints.up('xs')]: {\n                minWidth: 270\n            },\n            [theme.breakpoints.up('sm')]: {\n                minWidth: 500\n            },\n        }\n    }),\n);\n\nexport default function InputText({updateResultsCallback}: { updateResultsCallback: (s: string) => void }) {\n    const classes = useStyles();\n\n    const [text, setText] = useState('');\n    const [timer, setTimer] = useState<NodeJS.Timer>();\n\n    useEffect(() => {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        setTimer(setTimeout(() => {\n            updateResultsCallback(text)\n        }, 500));\n        // eslint-disable-next-line\n    }, [text]);\n\n    const onChangeText = (event: ChangeEvent<HTMLInputElement>) => {\n        event.persist();\n        return new Promise((resolve, _) => {\n            resolve(event.target.value);\n        }).then(v => {\n            setText(v as string);\n        });\n    };\n    return (\n        <TextField className={classes.textField} variant=\"outlined\" onChange={onChangeText}\n                   label=\"Пошук\" placeholder=\"василь іванович, 40885849, київ\"\n        />\n    );\n};","import React from 'react'\nimport './Loading.scss';\nimport {Container, Grid, Typography} from \"@material-ui/core\";\n\nexport default function Loading() {\n    return <Grid container justify={\"center\"} alignContent={\"center\"} style={{textAlign: \"center\"}}>\n        <Grid item xs={12}>\n            <Container maxWidth={\"xs\"} className=\"loader\" style={{maxWidth: 75}}>\n                <div className=\"loader__bar\"/>\n                <div className=\"loader__bar\"/>\n                <div className=\"loader__bar\"/>\n                <div className=\"loader__bar\"/>\n                <div className=\"loader__bar\"/>\n                <div className=\"loader__ball\"/>\n            </Container>\n        </Grid>\n        <Grid item xs={12}>\n            <Typography variant=\"h4\"\n                        style={{fontWeight: 100, letterSpacing: 4}}>\n                Завантаження\n            </Typography>\n        </Grid>\n    </Grid>;\n};","import Papa from \"papaparse\";\nimport {TableItem} from \"../model/TableItem\";\n\nexport const loadData = (onDataLoaded: (list: TableItem[]) => void) => {\n    const configPapaparse = {\n        skipEmptyLines: true, header: true, download: true, worker: true, delimiter: ','\n    };\n    Papa.parse('https://fop-check.s3.eu-central-1.amazonaws.com/map_type.csv', {\n        ...configPapaparse,\n        complete: function (results_types, _) {\n            let types = results_types.data.flatMap(it => Object.keys(it).map(key => it[key]));\n            Papa.parse('https://fop-check.s3.eu-central-1.amazonaws.com/map_map_department.csv', {\n                ...configPapaparse,\n                complete: function (results_department, _) {\n                    let departments = results_department.data.flatMap(it => Object.keys(it).map(key => it[key]));\n                    // setDepartmentMap(departments);\n                    Papa.parse('https://fop-check.s3.eu-central-1.amazonaws.com/db2020.csv', {\n                        ...configPapaparse,\n                        complete: function (results, _) {\n                            onDataLoaded(results.data.map((item, index) => parseItem(index + 1, item, departments, types)));\n                        }\n                    });\n                }\n            });\n        }\n    });\n};\n\nfunction parseItem(index: number, item: any, departments: any[], types: any[]) {\n    let type = String(types[Number(item['type_id'])]);\n    let department = String(departments[Number(item['department_id'])]);\n    return {\n        'index': index,\n        'name': item['name'],\n        'address': item['address'],\n        'code': item['code'],\n        'type': type[0].toUpperCase() + type.slice(1),\n        'risk': item['risk'],\n        'department': department[0].toUpperCase() + department.slice(1),\n        'date': item['date'],\n        'duration': item['duration']\n    } as TableItem;\n}","import React from 'react'\nimport Highlighter from \"react-highlight-words\";\nimport {\n    createStyles,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableFooter,\n    TableHead,\n    TablePagination,\n    TableRow,\n    Theme\n} from \"@material-ui/core\";\nimport {grey} from '@material-ui/core/colors';\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            height: '80vh'\n        }\n    }),\n);\n\ninterface IDictionary {\n    [index: string]: { name: string, size: string, align: string };\n}\n\nexport default function FopTable({domains, items}: { domains: string[], items: any[] }) {\n    const classes = useStyles();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const columnNames = ['index', 'name', 'address', 'code', 'type', 'risk', 'department', 'date', 'duration'];\n    const columnNamesMap = {\n        'index': {name: '#', size: '1%', align: 'center'},\n        'name': {name: 'Підприємство', size: '10%', align: 'left'},\n        'address': {name: 'Адреса', size: '20%', align: 'left'},\n        'code': {name: 'ЄДРПОУ або РНОКПП', size: '4%', align: 'center'},\n        'type': {name: 'Предмет контролю', size: '20%', align: 'left'},\n        'risk': {name: 'Ризик', size: '5%', align: 'left'},\n        'department': {name: 'Департамент', size: '30%', align: 'left'},\n        'date': {name: 'Дата', size: '5%', align: 'left'},\n        'duration': {name: 'Тривалість', size: '5%', align: 'left'}\n    } as IDictionary;\n\n    const handleChangePage = (_: any, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    function buildRowItem(indexRow: number, row: any) {\n        return <TableRow key={indexRow}>\n            {columnNames.map((column, indexColumn) =>\n                <TableCell style={{verticalAlign: 'top'}}\n                           key={indexColumn}>\n                    {\n                        ['name', 'address', 'code'].includes(column)\n                            ? <Highlighter\n                                searchWords={domains}\n                                autoEscape={true}\n                                highlightStyle={{fontWeight: 'bold'}}\n                                textToHighlight={row[column].toString()}\n                            />\n                            : row[column]\n                    }\n\n                </TableCell>)}\n        </TableRow>;\n    }\n\n    function buildTableCell(indexColumn: number, column: string) {\n        return <TableCell key={indexColumn} style={{\n            width: columnNamesMap[column].size,\n            textAlign: columnNamesMap[column].align as 'left' | 'center'\n        }}>\n            {columnNamesMap[column].name}\n        </TableCell>;\n    }\n\n    return <TableContainer className={classes.paper}>\n        <Table stickyHeader size=\"small\" aria-label=\"custom pagination table\">\n            <TableHead>\n                <TableRow style={{background: grey[100]}}>\n                    {columnNames.map((column, indexColumn) => buildTableCell(indexColumn, column))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {items\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, indexRow) => buildRowItem(indexRow, row))}\n            </TableBody>\n            <TableFooter>\n                <TableRow>\n                    <TablePagination\n                        labelRowsPerPage={'Відображати результатів на сторінці:'}\n                        rowsPerPageOptions={[50, 100, 250]}\n                        count={items.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                    />\n                </TableRow>\n            </TableFooter>\n        </Table>\n    </TableContainer>;\n};","import React, {useEffect, useState} from 'react'\nimport {Grid, Typography} from \"@material-ui/core\";\nimport stringSimilarity from 'string-similarity'\nimport InputText from \"./InputText\";\nimport Loading from \"./loading/Loading\";\nimport {TableItem} from \"../model/TableItem\";\nimport {loadData} from \"../network/Api\";\nimport FopTable from \"./Table\";\n\nconst App: React.FC = () => {\n    const [filterParam, setFilterParam] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [items, setItems] = useState([] as any[]);\n\n    useEffect(() => {\n        setLoading(true);\n        loadData((results: TableItem[]) => {\n            setLoading(false);\n            setItems(results);\n        })\n    }, []);\n\n    const searchDomains = filterParam.trim().toLowerCase().split(/[, ]+/).map(it => it.toString().trim()).filter(it => it);\n\n    const filteredItems = items\n        .filter(item => searchDomains.map(domain => `${item['name']} ${item['address']} ${item['code']}`.toLowerCase().indexOf(domain) !== -1).some(it => it))\n        .map(item => {\n            item['similarity'] = stringSimilarity.compareTwoStrings(filterParam.trim().toLowerCase(), `${item['name']} ${item['address']} ${item['code']}`.toLowerCase());\n            return item;\n        })\n        .sort((t1, t2) => t2['similarity'] < t1['similarity'] ? -1 : 1)\n        .map((item, index) => {\n            item['index'] = index + 1;\n            return item;\n        });\n\n    return <Grid container justify={\"center\"} alignContent={\"center\"} style={{height: '100vh'}}>\n        {\n            isLoading\n                ? <Grid item xs={12}><Loading/></Grid>\n                : <>\n                    {\n                        filterParam.length === 0 &&\n                        <Grid item>\n                            <Typography variant={\"h4\"}>\n                                Перевірки підприємств держорганами\n                            </Typography>\n                            <Typography variant={\"h3\"} color={\"textSecondary\"} align={\"center\"}>\n                                2020\n                            </Typography>\n                        </Grid>\n                    }\n                    <Grid item xs={12} style={{textAlign: \"center\"}}>\n                        <InputText updateResultsCallback={setFilterParam}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        {\n                            filterParam.length !== 0 &&\n                            <FopTable domains={searchDomains} items={filteredItems}/>\n                        }\n                    </Grid>\n                </>\n        }\n    </Grid>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {buildTheme} from \"./utils/ThemeProvider\";\nimport {ThemeProvider} from '@material-ui/core';\n\nReactDOM.render(\n    <ThemeProvider theme={buildTheme()}>\n        <App/>\n    </ThemeProvider>,\n    document.getElementById('root'));\n\ndocument.body.style.margin = '0';","import React from 'react';\nimport {createMuiTheme} from \"@material-ui/core\";\n\nexport const buildTheme = () => createMuiTheme({\n    palette: {\n        primary: {\n            main: '#607D8B',\n        },\n        secondary: {\n            main: '#FFC107',\n        },\n    },\n});"],"sourceRoot":""}